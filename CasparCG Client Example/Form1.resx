<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8A/wD/gH8B/4D/Af/A/4P/wf//////////8=
</value>
  </data>
</root>